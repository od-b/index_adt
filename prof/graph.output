		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.00% of 243.69 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.8    0.01  243.23                 main [1]
                0.48  241.16  400000/400000      index_addpath [2]
                0.80    0.38  400000/400000      tokenize_file [11]
                0.40    0.00  400000/400000      list_destroy [13]
                0.01    0.00  400000/400001      list_create [18]
                0.00    0.00       1/1           find_files [19]
                0.00    0.00  400000/108801462     list_next [15]
                0.00    0.00  400001/109201463     list_hasnext [16]
                0.00    0.00  400002/800002      concatenate_strings [22]
                0.00    0.00  400000/400000      list_destroyiter [25]
                0.00    0.00    1601/1601        gettime [27]
                0.00    0.00     800/800         set_size [29]
                0.00    0.00     800/800         index_uniquewords [28]
                0.00    0.00       1/1           is_valid_directory [31]
                0.00    0.00       1/1           index_create [30]
                0.00    0.00       1/400001      list_size [24]
                0.00    0.00       1/400001      list_createiter [23]
-----------------------------------------------
                0.48  241.16  400000/400000      main [1]
[2]     99.2    0.48  241.16  400000         index_addpath [2]
                0.58  141.42 108401462/108401462     set_add [4]
               47.19   39.36 108401462/108401462     set_tryadd [5]
                5.50    3.41 107410334/107410334     map_put [8]
                2.21    1.19 108401462/108401462     map_get [10]
                0.21    0.00 108401462/108801462     list_next [15]
                0.09    0.00 108801462/109201463     list_hasnext [16]
                0.00    0.00 1658890/1658891     set_create [21]
                0.00    0.00  400000/400001      list_size [24]
                0.00    0.00  400000/400001      list_createiter [23]
                0.00    0.00  400000/400000      map_create [26]
-----------------------------------------------
                             967893753             insert [3]
                1.15    1.01 1658890/110060352     set_tryadd [5]
               75.22   66.20 108401462/110060352     set_add [4]
[3]     58.9   76.37   67.22 110060352+967893753 insert [3]
               66.62    0.00 934255979/934255979     compare_idocs_by_path [6]
                0.60    0.00 34628902/2199089897     strcmp_iwords [7]
                             967893753             insert [3]
-----------------------------------------------
                0.58  141.42 108401462/108401462     index_addpath [2]
[4]     58.3    0.58  141.42 108401462         set_add [4]
               75.22   66.20 108401462/110060352     insert [3]
-----------------------------------------------
               47.19   39.36 108401462/108401462     index_addpath [2]
[5]     35.5   47.19   39.36 108401462         set_tryadd [5]
               37.19    0.00 2164460995/2199089897     strcmp_iwords [7]
                1.15    1.01 1658890/110060352     insert [3]
-----------------------------------------------
               66.62    0.00 934255979/934255979     insert [3]
[6]     27.3   66.62    0.00 934255979         compare_idocs_by_path [6]
-----------------------------------------------
                0.60    0.00 34628902/2199089897     insert [3]
               37.19    0.00 2164460995/2199089897     set_tryadd [5]
[7]     15.5   37.79    0.00 2199089897         strcmp_iwords [7]
-----------------------------------------------
                             201559040             map_put [8]
                5.50    3.41 107410334/107410334     index_addpath [2]
[8]      3.7    5.50    3.41 107410334+201559040 map_put [8]
                3.41    0.00 308969374/417370836     hash_string [9]
                             201559040             map_put [8]
-----------------------------------------------
                1.19    0.00 108401462/417370836     map_get [10]
                3.41    0.00 308969374/417370836     map_put [8]
[9]      1.9    4.60    0.00 417370836         hash_string [9]
-----------------------------------------------
                2.21    1.19 108401462/108401462     index_addpath [2]
[10]     1.4    2.21    1.19 108401462         map_get [10]
                1.19    0.00 108401462/417370836     hash_string [9]
-----------------------------------------------
                0.80    0.38  400000/400000      main [1]
[11]     0.5    0.80    0.38  400000         tokenize_file [11]
                0.38    0.00 108401462/108801462     list_addlast [14]
-----------------------------------------------
                                                 <spontaneous>
[12]     0.2    0.43    0.00                 _init [12]
-----------------------------------------------
                0.40    0.00  400000/400000      main [1]
[13]     0.2    0.40    0.00  400000         list_destroy [13]
-----------------------------------------------
                0.00    0.00  400000/108801462     _find_files [20]
                0.38    0.00 108401462/108801462     tokenize_file [11]
[14]     0.2    0.38    0.00 108801462         list_addlast [14]
-----------------------------------------------
                0.00    0.00  400000/108801462     main [1]
                0.21    0.00 108401462/108801462     index_addpath [2]
[15]     0.1    0.21    0.00 108801462         list_next [15]
-----------------------------------------------
                0.00    0.00  400001/109201463     main [1]
                0.09    0.00 108801462/109201463     index_addpath [2]
[16]     0.0    0.09    0.00 109201463         list_hasnext [16]
-----------------------------------------------
                                                 <spontaneous>
[17]     0.0    0.02    0.00                 dir_filter [17]
-----------------------------------------------
                0.00    0.00       1/400001      find_files [19]
                0.01    0.00  400000/400001      main [1]
[18]     0.0    0.01    0.00  400001         list_create [18]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[19]     0.0    0.00    0.00       1         find_files [19]
                0.00    0.00       1/1           _find_files [20]
                0.00    0.00       1/400001      list_create [18]
-----------------------------------------------
                0.00    0.00       1/1           find_files [19]
[20]     0.0    0.00    0.00       1         _find_files [20]
                0.00    0.00  400000/108801462     list_addlast [14]
                0.00    0.00  400000/800002      concatenate_strings [22]
-----------------------------------------------
                0.00    0.00       1/1658891     index_create [30]
                0.00    0.00 1658890/1658891     index_addpath [2]
[21]     0.0    0.00    0.00 1658891         set_create [21]
-----------------------------------------------
                0.00    0.00  400000/800002      _find_files [20]
                0.00    0.00  400002/800002      main [1]
[22]     0.0    0.00    0.00  800002         concatenate_strings [22]
-----------------------------------------------
                0.00    0.00       1/400001      main [1]
                0.00    0.00  400000/400001      index_addpath [2]
[23]     0.0    0.00    0.00  400001         list_createiter [23]
-----------------------------------------------
                0.00    0.00       1/400001      main [1]
                0.00    0.00  400000/400001      index_addpath [2]
[24]     0.0    0.00    0.00  400001         list_size [24]
-----------------------------------------------
                0.00    0.00  400000/400000      main [1]
[25]     0.0    0.00    0.00  400000         list_destroyiter [25]
-----------------------------------------------
                0.00    0.00  400000/400000      index_addpath [2]
[26]     0.0    0.00    0.00  400000         map_create [26]
-----------------------------------------------
                0.00    0.00    1601/1601        main [1]
[27]     0.0    0.00    0.00    1601         gettime [27]
-----------------------------------------------
                0.00    0.00     800/800         main [1]
[28]     0.0    0.00    0.00     800         index_uniquewords [28]
-----------------------------------------------
                0.00    0.00     800/800         main [1]
[29]     0.0    0.00    0.00     800         set_size [29]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[30]     0.0    0.00    0.00       1         index_create [30]
                0.00    0.00       1/1658891     set_create [21]
                0.00    0.00       1/1           parser_create [32]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[31]     0.0    0.00    0.00       1         is_valid_directory [31]
-----------------------------------------------
                0.00    0.00       1/1           index_create [30]
[32]     0.0    0.00    0.00       1         parser_create [32]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [20] _find_files (common.c)  [3] insert (aatreeset.c)   [26] map_create
  [12] _init                  [31] is_valid_directory     [10] map_get
   [6] compare_idocs_by_path  [14] list_addlast            [8] map_put
  [22] concatenate_strings    [18] list_create            [32] parser_create
  [17] dir_filter (common.c)  [23] list_createiter         [4] set_add
  [19] find_files             [13] list_destroy           [21] set_create
  [27] gettime                [25] list_destroyiter       [29] set_size
   [9] hash_string            [16] list_hasnext            [5] set_tryadd
   [2] index_addpath          [15] list_next               [7] strcmp_iwords
  [30] index_create           [24] list_size              [11] tokenize_file
  [28] index_uniquewords       [1] main
